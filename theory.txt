Completed Video : 25
Execution engine gives us two things 
   1 - Global Object
   2 - this

   this - window (this is browser window)

   Global Object - window

   Hoisting
----------------
When you declare variables and functions in javascript ,
the Execution engine sets up a memory space for variables and
functions .

1.If it is a variable it will keep that variable in memory and assign
a default value called undefined.
2. If it is a function it will copy the entire function and 
keeps in memory. 
   
   undefined
   ---------------
   It is special value in javascript which takes up memory space.

   Warning : Never ever declare a variable undefined, Because it is difficult to \
   find value is 'undefined' because we set it or javascript engine set it up.

Types In Javascript:
----------------------
Dynamic Typing:
----------------
You don't tell the engine what type of data a variable holds
It figures out while your code running.

Strict Typing
----------------
C# or java follows script Typing

Prmitive Types
--------------------
A type of data that represents a single value is called primitive data type.

1. undefined - This represents lack of existance(we should never use this).
2. null - This represents lack of existance(we can set a variable to this).
3. Boolean - true or false
4. number - Integer/floating type(decimal)
5. string - it is a sequence of characters
6. symbol - used in ES6

Anything which is not primitive is an object in javascript.

object
function
array
Date
RegularExpression

Functions
--------------
Function is a block of code wrapped around flower brackets and invocated later.

function functionname(){

}

1. Regular Function
2. Anonymous Functions
3. Immediately Invoked Functions(IIFs)

First Class Functions:
---------------------------
1. Can be Invoked
2. Assign to a variable
3. passed as a parameter to another variable

Advantages with IIFs
-----------------------
Will not create unnecessary global variables and functions.
Functions and Variables defined don't conflict.

Objects:
----------
It is a collection of name value pairs,

1. Using New Object()
2. Using Object Literal{}
3. Using Object.create()

Object.create() method creates a new object using an existing
object or null as the prototype of newly created Object.

JSON
-----------
Javascript Object Notation
Inspired by the object literal Notation{}

<data>
<firstname></firstname>
<lastName></lastName>
</data>

JSON
--------
{
   "firstname":"uma",
   "lastName":"Mahesh"
}

Object
---------
{
   firstname:"santanu",
   lastName:"Paikaray"
}

Properties have to be wrapped in quotes for JSON

Anything which is JSON valid is valid in object literal.

JSON.stringify - It converts a javascript value into seriazlied string.

JSON.parser - Deserialzes a JSON string to a json object

Arrays:
-----------
An array is an object that can store a collection of items.

Useful when you want to store large amount of data.

var students = ["Santanu","Sandeep","Sipun","Madhuri"]

var people = new array("Santanu","Sandeep","Sipun","Madhuri")

In javascript arrays are object types with special constructer

var array =  new Array(3) - length of Array
var array  = new Array(100000) - length will not create any memory

array index starts from zero .



